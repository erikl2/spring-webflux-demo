
# Rate Limiting Configuration using Spring Cloud Gateway

# Global rate limiter (e.g., 1000 requests per second)
spring.cloud.gateway.global-rate-limiter.redis-rate-limiter.replenishRate=1000
spring.cloud.gateway.global-rate-limiter.redis-rate-limiter.burstCapacity=1000

# Rate limiting based on principal name (e.g., user-specific limits)
# spring.cloud.gateway.routes[0].id=users_route
# spring.cloud.gateway.routes[0].uri=lb://users-service
# spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
# spring.cloud.gateway.routes[0].filters[0]=name=RequestRateLimiter
# spring.cloud.gateway.routes[0].filters[0].args.redis-rate-limiter.replenishRate=5
# spring.cloud.gateway.routes[0].filters[0].args.redis-rate-limiter.burstCapacity=10

# Spring Boot Actuator Configuration

# Enable all actuator endpoints (for demonstration purposes; in production, you'd be more selective)
management.endpoints.web.exposure.include=*

# Show details of the health endpoint (by default, only the status is shown)
management.endpoint.health.show-details=always

# Eureka Client Configuration

eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
spring.application.name=ecommerce-service
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Resilience4j Circuit Breaker configurations
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=100
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=10
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=1m
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=2s
resilience4j.circuitbreaker.configs.default.slowCallRateThreshold=50
resilience4j.circuitbreaker.configs.default.maxWaitDurationInHalfOpenState=1s
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true

# Spring Boot Actuator configurations to expose metrics for Prometheus
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Rate limiting configuration
ecommerce.api.rateLimit=10
ecommerce.api.refillRate=2
